var cowsay=function(r){function n(_){if(t[_])return t[_].exports;var e=t[_]={exports:{},id:_,loaded:!1};return r[_].call(e.exports,e,e.exports,n),e.loaded=!0,e.exports}var t={};return n.m=r,n.c=t,n.p="",n(0)}([function(r,n,t){"use strict";function _(r){return r&&r.__esModule?r:{"default":r}}function e(r){if(Array.isArray(r)){for(var n=0,t=Array(r.length);n<r.length;n++)t[n]=r[n];return t}return Array.from(r)}function a(r){for(var n=arguments.length,t=Array(n>1?n-1:0),_=1;_<n;_++)t[_-1]=arguments[_];var a=function(r){for(var n=arguments.length,t=Array(n>1?n-1:0),_=1;_<n;_++)t[_-1]=arguments[_];var e=c.apply(void 0,t);return[].concat(e).concat(r).join("\n")};if(Array.isArray(r)){var o=[r].concat(t||[]);return r="    \\   ^__^\n     \\  (oo)_______\n        (__)       )/\\\n            ||----w |\n            ||     ||",a.apply(void 0,[r].concat(e(o)))}return function(){void 0!==u["default"][r]&&(r=u["default"][r]);for(var n=arguments.length,t=Array(n),_=0;_<n;_++)t[_]=arguments[_];return a.apply(void 0,[r].concat(t))}}Object.defineProperty(n,"__esModule",{value:!0}),n["default"]=a;var o=t(1),u=_(o),c=function(r){for(var n=arguments.length,t=Array(n>1?n-1:0),_=1;_<n;_++)t[_-1]=arguments[_];var a=r.reduce(function(r,n,_){return r+=n,t[_]&&(r+=t[_]),r},""),o=a.split("\n"),u=Math.max.apply(Math,e(o.map(function(r){return r.length}))),c=o.map(function(r,n){function t(r,n,t){var _=void 0;return _=1===n?"start"===r?"<":">":0===t?"start"===r?"/":"\\":n-1===t?"start"===r?"\\":"/":"|"}var _=t("start",o.length,n),e=t("end",o.length,n);return _+" "+r+" ".repeat(u-r.length)+" "+e}),f=" "+"_".repeat(u+2),i=" "+"-".repeat(u+2);return[].concat(f).concat(c).concat(i).join("\n")};r.exports=n["default"]},function(r,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n["default"]={snake:"   \\       /^\\/^\\\n    \\    _|__|  O|\n\\/     /~     \\_/ \\\n \\____|__________/  \\\n        \\_______      \\\n                `\\     \\                 \\\n                  |     |                  \\\n                 /      /                    \\\n                /     /                       \\\\\n              /      /                         \\ \\\n             /     /                            \\  \\\n           /     /             _----_            \\   \\\n          /     /           _-~      ~-_         |   |\n         (      (        _-~    _--_    ~-_     _/   |\n          \\      ~-____-~    _-~    ~-_    ~-_-~    /\n            ~-_           _-~          ~-_       _-~\n               ~--______-~                ~-___-~"},r.exports=n["default"]}]);if (module !== undefined) { module.exports = cowsay; }
//# sourceMappingURL=cowsay-tag.min.js.map